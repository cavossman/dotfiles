BREW_PREFIX=$(brew --prefix)
BREW_PREFIX_ESCAPED=$(echo $BREW_PREFIX | sed 's/\//\\\//g')

# the important packages
brew install -q toilet boxes lolcat jp2a cowsay cmatrix

brew install -q node
brew install -q dpkg
brew install -q wget
brew install -q httpd
brew install -q jq

brew install -q nghttp2 openssl
brew install -q imagemagick awscli htop
brew install -q wp-cli

# Install more up-to-date version of rsync and link it
brew install -q rsync
brew link -f rsync


###################
## Configure PHP ##
###################

brew install -q php
brew link php --force --quiet

# Install sphp to switch between php versions.
curl -L https://gist.githubusercontent.com/cavossman/8f34529ffd0328a12632ad0f074d5c7d/raw/9c5da60cb1e866a15fafba922eff7edd06840502/sphp.sh >$BREW_PREFIX/bin/sphp
chmod +x $BREW_PREFIX/bin/sphp # usage: `sphp 7.4` or `sphp 8.1`

brew install composer

PHP_MAJOR_VER=$(php -r 'echo PHP_MAJOR_VERSION;')
PHP_MINOR_VER=$(php -r 'echo PHP_MINOR_VERSION;')
PHP_VERSION="${PHP_MAJOR_VER}.${PHP_MINOR_VER}"

if [[ ! -f $BREW_PREFIX/etc/php/$PHP_VERSION/conf.d/99-xdebug.ini ]]; then
    pecl install xdebug

    # tee allows us to save to file owned by root
    sudo echo "; generated by mac_install.sh
xdebug.mode = debug
xdebug.start_with_request = yes" | sudo tee -a $BREW_PREFIX/etc/php/$PHP_VERSION/conf.d/99-xdebug.ini >/dev/null

else
    echo "\nXdebug has already been installed. If it's not working then you may be running a different php version via Apache than the command line"
fi


########################
## Configure Database ##
########################

echo "${GREEN}Congfiguring database...${NOCOL}\n"

brew install -q mariadb mysql-client
brew services start mariadb

if [ ! -f ~/.my.cnf ]; then
    printf "${CLEAR}"

    echo "\nEnter your desired local DB password:"
    read -p "Local DB Password: " LOCAL_DB_PASS

    echo "[client]
user=root
password=${LOCAL_DB_PASS}
" >~/.my.cnf
    chmod 600 ~/.my.cnf

    echo "export LOCAL_DB_PASS=\"${LOCAL_DB_PASS}\"" >~/.zprofile

    # Allow user access to root mysql user without sudo
    sudo mysql -e "GRANT ALL PRIVILEGES ON *.* to 'root'@'localhost' IDENTIFIED BY '${LOCAL_DB_PASS}'; FLUSH PRIVILEGES;"

    printf "${CLEAR}"
else
    echo "\nLooks like you've already configured your database."
    echo "If you need to update your credentials then you should edit ~/.my.cnf"
fi


##################
## Setup Apache ##
##################

echo "${GREEN}Congfiguring Apache...${NOCOL}\n"

# Edit httpd configuration to read index.php as index, enable rewrite_module, and listen on 80
# TODO: fix appending index.php to DirectoryIndex line every time this gets executed.
sed -i .bak '/^.*DirectoryIndex index.html/ s/$/ index.php/;s/Listen 8080/Listen 80/;/^#LoadModule rewrite_module/ s/^#//' $BREW_PREFIX/etc/httpd/httpd.conf
sed -i .bak '/^#LoadModule socache_shmcb_module lib\/httpd\/modules\/mod_socache_shmcb.so/ s/^#//' $BREW_PREFIX/etc/httpd/httpd.conf # Load socache_shmcb (SSL config)
sed -i .bak '/^#LoadModule ssl_module lib\/httpd\/modules\/mod_ssl.so/ s/^#//' $BREW_PREFIX/etc/httpd/httpd.conf                     # Load mod_ssl (SSL config)
sed -i .bak "/^#Include ${BREW_PREFIX_ESCAPED}\/etc\/httpd\/extra\/httpd-ssl.conf/ s/^#//" $BREW_PREFIX/etc/httpd/httpd.conf         # Include httpd-ssl config (SSL config)

sed -i .bak "s/User _www/User $(whoami)/" $BREW_PREFIX/etc/httpd/httpd.conf
sed -i .bak "s/Group _www/Group staff/" $BREW_PREFIX/etc/httpd/httpd.conf

sed -i .bak 's/8443/443/' $BREW_PREFIX/etc/httpd/extra/httpd-ssl.conf # Configure SSL port to default 443

# TODO: delete httpd-ssl.conf <VirtualHost> block or else httpd won't work as there are no generic server keys.
# sed -i bak 's/<VirtualHost.*</VirtualHost>://' $BREW_PREFIX/etc/httpd/extra/httpd-ssl.conf

# Remove backup files
rm $BREW_PREFIX/etc/httpd/httpd.conf.bak
rm $BREW_PREFIX/etc/httpd/extra/httpd-ssl.conf.bak

# Set handler to php if it's a .php file and load libphp.so, and include site-enabled/*.conf
if [[ ! -d $BREW_PREFIX/etc/httpd/sites-enabled ]]; then
    mkdir $BREW_PREFIX/etc/httpd/sites-enabled

    echo "
Include $BREW_PREFIX/etc/httpd/sites-enabled/*.conf
LoadModule php_module $BREW_PREFIX/opt/php@$PHP_VERSION/lib/httpd/modules/libphp.so
<FilesMatch \.php$>
    SetHandler application/x-httpd-php
</FilesMatch>
" >>$BREW_PREFIX/etc/httpd/httpd.conf
fi

# stop apache that comes with mac and don't let it start on restart
sudo apachectl stop
sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist 2>/dev/null

sudo brew services stop httpd
sudo brew services start httpd

CERT_PATH="${BREW_PREFIX}/etc/httpd/certs"

# Setup Self Signed Certs
brew install -q mkcert nss
mkcert -install
mkdir $CERT_PATH

echo "You need to edit: ${BREW_PREFIX}/etc/httpd/extra/httpd-ssl.conf and manually remove the <VirtualHost> block for now.\n"

